// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Kullanıcı modeli
model User {
  id              String           @id @default(cuid())
  email           String           @unique
  password        String
  name            String
  role            Role             @default(USER)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  serviceRequests ServiceRequest[]
}

enum Role {
  USER
  ADMIN
}

// Servis talebi modeli
model ServiceRequest {
  id            String         @id @default(cuid())
  userId        String
  user          User           @relation(fields: [userId], references: [id])
  deviceType    String
  brand         String
  model         String
  problem       String         @db.Text
  status        Status         @default(PENDING)
  trackingCode  String         @unique
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  statusUpdates StatusUpdate[]
}

enum Status {
  PENDING
  APPROVED
  IN_PROGRESS
  COMPLETED
  REJECTED
}

// Servis durumu güncellemeleri
model StatusUpdate {
  id               String         @id @default(cuid())
  serviceRequestId String
  serviceRequest   ServiceRequest @relation(fields: [serviceRequestId], references: [id])
  status           Status
  note             String?        @db.Text
  createdAt        DateTime       @default(now())
}

// Blog yazıları
model BlogPost {
  id        String   @id @default(cuid())
  title     String
  content   String   @db.Text
  slug      String   @unique
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Hizmetler
model Service {
  id          String   @id @default(cuid())
  title       String
  description String   @db.Text
  price       Float?
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// İletişim mesajları
model ContactMessage {
  id        String   @id @default(cuid())
  name      String
  email     String
  subject   String
  message   String   @db.Text
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
}
